// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model File {
  id          String   @id @default(uuid())
  filename    String
  mimetype    String
  size        Int
  storagePath String
  cloudinaryUrl String?
  status      FileStatus @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  fileChunks FileChunk[]
  processingQueues ProcessingQueue[]
}

enum FileStatus {
  PENDING
  COMPLETED
  FAILED
}

model FileChunk {
  id          String   @id @default(uuid())
  fileId      String
  file        File     @relation(fields: [fileId], references: [id])
  chunkIndex  Int
  chunkSize   Int
  storagePath String
  createdAt   DateTime @default(now())
}

model ProcessingQueue {
  id        String   @id @default(uuid())
  fileId    String
  file      File     @relation(fields: [fileId], references: [id])
  status    QueueStatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum QueueStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}
